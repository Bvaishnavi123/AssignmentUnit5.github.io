[{"C:\\Users\\Jagdeesh\\Desktop\\Unit5\\AssignmentUnit5.github.io\\Assignment4_TODOS\\ModifiedTODO\\src\\index.js":"1","C:\\Users\\Jagdeesh\\Desktop\\Unit5\\AssignmentUnit5.github.io\\Assignment4_TODOS\\ModifiedTODO\\src\\App.js":"2","C:\\Users\\Jagdeesh\\Desktop\\Unit5\\AssignmentUnit5.github.io\\Assignment4_TODOS\\ModifiedTODO\\src\\components\\Input\\InputForm.jsx":"3","C:\\Users\\Jagdeesh\\Desktop\\Unit5\\AssignmentUnit5.github.io\\Assignment4_TODOS\\ModifiedTODO\\src\\components\\List\\ListItem.jsx":"4"},{"size":218,"mtime":1650003884919,"results":"5","hashOfConfig":"6"},{"size":673,"mtime":1650016923120,"results":"7","hashOfConfig":"6"},{"size":537,"mtime":1650005987114,"results":"8","hashOfConfig":"6"},{"size":796,"mtime":1650017543750,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"8b29o",{"filePath":"13","messages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15"},{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},"C:\\Users\\Jagdeesh\\Desktop\\Unit5\\AssignmentUnit5.github.io\\Assignment4_TODOS\\ModifiedTODO\\src\\index.js",[],["21","22"],"C:\\Users\\Jagdeesh\\Desktop\\Unit5\\AssignmentUnit5.github.io\\Assignment4_TODOS\\ModifiedTODO\\src\\App.js",["23"],"import {InputForm} from \"./components/Input/InputForm\"\nimport {ListItem} from \"./components/List/ListItem\"\nimport {useState} from \"react\"\nfunction App() {\n const [todo,setTodo] = useState([])\n const ItemHandler = (item)=>{\n    //console.log(item)\n    setTodo(prevState=>{\n      return [...prevState,item]\n    })\n }\n\n const onDeleteItemHandler =(index)=>{\n    console.log(index)\n    let new_arr = todo.map((e,i)=>{\n      if(i!==index)\n      {\n        return e\n      }\n    })\n    setTodo(new_arr)\n }\n  return (\n    <div>\n      <InputForm onAddItem={ItemHandler}/>\n      <ListItem todo={todo} onDeleteItem={onDeleteItemHandler}/>\n      \n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\Jagdeesh\\Desktop\\Unit5\\AssignmentUnit5.github.io\\Assignment4_TODOS\\ModifiedTODO\\src\\components\\Input\\InputForm.jsx",[],"C:\\Users\\Jagdeesh\\Desktop\\Unit5\\AssignmentUnit5.github.io\\Assignment4_TODOS\\ModifiedTODO\\src\\components\\List\\ListItem.jsx",["24","25"],"\r\nimport classes from \"./ListItem.module.css\"\r\nimport {useState} from \"react\"\r\nexport const ListItem = (props) => {\r\n  const [show,setshow]=useState(true)\r\n  const [chai,setChai]=useState({\r\n    indexOfChai : -1\r\n  })\r\n  const todoDeleteHandler = (index)=>{\r\n    props.onDeleteItem(index)\r\n   // setshow(false)\r\n  }\r\n    const todoCompleteHandler = (index)=>{\r\n      console.log(index)\r\n        setChai({\r\n          indexOfChai : index\r\n        })\r\n        \r\n        //console.log(\"hiiiii\")\r\n    }\r\n  return <ul>{props.todo.map((e,index) => {\r\n     return <li className={`${chai.indexOfChai === index ? classes.listItem : \"\"}`} onClick={todoCompleteHandler.bind(this,index)} key={Math.random()}>{e} <button onClick={todoDeleteHandler.bind(this,index)}>Delete</button> </li>\r\n   })}  </ul> ;\r\n};\r\n",{"ruleId":"26","replacedBy":"27"},{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","severity":1,"message":"31","line":15,"column":33,"nodeType":"32","messageId":"33","endLine":15,"endColumn":35},{"ruleId":"34","severity":1,"message":"35","line":5,"column":10,"nodeType":"36","messageId":"37","endLine":5,"endColumn":14},{"ruleId":"34","severity":1,"message":"38","line":5,"column":15,"nodeType":"36","messageId":"37","endLine":5,"endColumn":22},"no-native-reassign",["39"],"no-negated-in-lhs",["40"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-unused-vars","'show' is assigned a value but never used.","Identifier","unusedVar","'setshow' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]